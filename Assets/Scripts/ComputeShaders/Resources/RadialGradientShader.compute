// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#include "MyHelpers.hlsl"

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
float2 Dims;
float2 Center;
float Radius;
float4 PrimaryColor;
float4 SecondaryColor;
int BlendMode;
int GradientBlendMode;
float BlendPower;

float DistortionFactor;
RWTexture2D<float4> DistortionTex;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint2 DistortedPosition = DistortPos(DistortionTex[id.xy], id.xy, DistortionFactor);
    
    
    
    
    
    // TODO: insert actual code here!
   // Radius /= 100.0;
    Center *= Dims;
    
    float t = length(DistortedPosition - Center) / Radius;

    float4 newcolor;

    if (t < 1.0)
    {
        newcolor = Blend(PrimaryColor, SecondaryColor, t, GradientBlendMode, false);
    }
    else
    {
        newcolor = float4(0, 0, 0, 0);

    }
    
    newcolor = pow(abs(newcolor), 1.0 / BlendPower);

    Result[id.xy] = Blend(Result[id.xy], newcolor, newcolor.w, BlendMode, true);

}
